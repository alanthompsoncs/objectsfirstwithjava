Exercise 3.1
Object diagram: LabClass (contains its own fields, plus one field that contains the student objects) <- 3x Student objects (each containing fields)

Class diagram: LabClass -> 3x Student objects

Exercise 3.2
When a class is created or deleted - since a class can be a field type, if a method changes that field then the class will change

Exercise 3.3
When an object is added or removed - since fields can hold objects, if a method changes that field then the object will change

Exercise 3.4
private Instructor tutor;

Exercise 3.5
NumberDisplay hours = new NumberDisplay(24);
hours.increment();
hours.increment();
hours.increment();
hours.increment();
hours.increment();
hours.increment();
hours.increment();
hours.increment();
hours.increment();
hours.increment();
hours.increment();
hours.increment();
hours.increment();
hours.increment();
hours.increment();
hours.increment();
hours.increment();
hours.increment();
hours.increment();
hours.increment();
hours.increment();
hours.increment();
hours.increment();
hours.increment();

Exercise 3.6
NumberDisplay minutes = new NumberDisplay(60);
The method calls are the object name (hours and minutes)
The number of increments needs to be counted to ensure the hours object rolls over once the minutes object reaches a value of 60

Exercise 3.7
NumberDisplay nd = new NumberDisplay(6);
nd.getValue() = 0 (int)
nd.setValue(6)
nd.increment()
nd.increment()
nd.increment()
nd.increment()
nd.increment()
nd.getValue() = 5 (int)
nd.increment()
nd.getValue() = 0 (int)

Exercise 3.8
Error: non-static method getValue() cannot be referenced from a static context

Exercise 3.9
Error: '.class' expected
nd.setValue(5);
The method is expecting an int as the parameter but a String was provided