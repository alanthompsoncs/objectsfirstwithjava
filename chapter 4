Exercise 4.1

Exercise 4.2
Nothing happens. There is no else block in the removeFile method so nothing will be returned.

Exercise 4.3
The second file name is displayed. Due to the first file name being removed from memory, it is replaced with the second file name in the first file name's index.

Exercise 4.4
private ArrayList<Book> library;

Exercise 4.5
ArrayList<Student> cs101;

Exercise 4.6
private ArrayList<MusicTrack> tracks;

Exercise 4.7
library = new ArrayList<Book>();
cs101 = new ArrayList<Student>();
tracks = new ArrayList<MusicTrack>();

library = new ArrayList<>();
cs101 = new ArrayList<>();
tracks = new ArrayList<>();

Exercise 4.8
10 - 1 = 9

Exercise 4.9
items.get(4);

Exercise 4.10
15 - 1 = 14

Exercise 4.11
files.add(favouriteTrack);

Exercise 4.12
dates.remove(2);

Exercise 4.13
Index 5 (removing index 9 does not change the position)

Exercise 4.14
public void checkIndex(int index)
{
    if(index < 0 || index > (files.size() - 1))
    {
        System.out.println("Error, the index must be between 0 and " + (files.size() - 1));
    }
}

No, this method only works if the number of files is greater than 0.

Exercise 4.15
public boolean validIndex(int index)
{
    if(index >= 0 && index < (files.size() - 1))
    {
        return true;
    }
    else
    {
        return false;
    }
}

This method only works if the number of files is greater than 1.